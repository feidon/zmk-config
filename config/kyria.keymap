/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define default_layer 0
#define _DEFAULT &to default_layer

#define qwerty_layer 1
#define _QWERTY &to qwerty_layer

#define colemak_layer 2
#define _COLEMAK &to colemak_layer

#define num_sym_layer 3
#define _NUMSYS  &mo num_sym_layer
#define _NUMBSPA &lt num_sym_layer BSPC

#define nav_fun_layer 4
#define _NAVFUN  &mo nav_fun_layer
#define _NAVSPA  &lt nav_fun_layer SPACE

#define bt_layer 5
#define _BTOOTH  &mo bt_layer 

#define ______   &trans
#define _PTAB    &kp LC(PG_UP)
#define _NTAB    &kp LC(PG_DN)
#define _NWIN    &kp LA(TAB)
#define _PWIN    &kp LS(LA(TAB))
#define _LR_DN   &kp LA(DOWN)
#define _LR_UP   &kp LA(UP)

#define CTL_TAB  &mt LCTRL TAB
#define _LSFT    &kp LSHFT
#define _LMET    &kp LMETA
#define _SPAC    &kp SPACE
#define _LALT    &kp LALT
#define _RALT    &kp RALT
#define _BSPC    &kp BSPC
#define _RMET    &kp RMETA
#define _COMMA   &kp COMMA
#define _RSFT    &kp RSHFT
#define _ENT     &kp ENTER
#define _RCTL    &kp RCTRL

#define _GRAVE   &kp GRAVE
#define _PRCNT   &kp PRCNT 
#define _CARET   &kp CARET
#define _EQUAL   &kp EQUAL
#define _MINUS   &kp MINUS
#define _UNDER   &kp UNDER

#define _LEFT    &kp LEFT
#define _DOWN    &kp DOWN
#define _UP      &kp UP
#define _RGHT    &kp RIGHT
#define _HOME    &kp HOME
#define _END     &kp END
#define _PGDN    &kp PG_DN
#define _PGUP    &kp PG_UP

#define _CLAN    &kp LG(SPACE)
#define _PIPE    &kp LS(BSLH)
#define _TILDE   &kp LS(GRAVE)

#define _BT1     &bt BT_SEL 0
#define _BT2     &bt BT_SEL 1
#define _BTCLR   &bt BT_CLR

#define _OUTTOG &out OUT_TOG
#define _OUTUSB &out OUT_USB
#define _OUTBLE &out OUT_BLE

/ {
	behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
			quick-tap-ms = <80>;
    		global-quick-tap;
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <50>;
            key-positions = <1 2>;
            bindings = <&kp ESC>;
        };
		combo_tab {
			timeout-ms = <50>;
			key-positions = <27 28>;
			bindings = <&kp TAB>;
		};
		combo_enter {
			timeout-ms = <50>;
			key-positions = <35 36>;
			bindings = <&kp ENTER>;
		};
		combo_backspace {
			timeout-ms = <50>;
			key-positions = <37 38>;
			bindings = <&kp BSPC>;
		};
    };

	keymap {
		compatible = "zmk,keymap";

		default_layer {
// ------------------------------------------------------------------------------------------------------------------------------------------------
//  |  ESC   |  Q     |  W     |  E     |  R     |  T     |                                   |  Y     |  U     |  I     |  O     |   P    | Enter |
//  | TAB/CTL|  A     |  S     |  D     |  F     |  G     |                                   |  H     |  J     |  K     |  L     |   :    | ctrl  |
//  | SHIFT  |  Z     |  X     |  C     |  V     |  B     |  atl   |  ----  |  ----  |  alt   |  N     |  M     |  ,     |  .     |   /    | shft  |
//                             |  meta  |  alt   |  nav   | space  | Enter  | qwermod|  num   | nav    | bt     |colemak |
// ------------------------------------------------------------------------------------------------------------------------------------------------
			bindings = <
	&kp ESC  &kp Q      &kp W      &kp E       &kp R       &kp T                                        &kp Y    &kp U       &kp I       &kp O      &kp P         _BSPC
	CTL_TAB  &hm LALT A &hm LGUI S &hm LCTRL D &hm LSHFT F &kp G                                        &kp H    &hm LSHFT J &hm LCTRL K &hm LGUI L &hm LALT SEMI _RCTL
	_LSFT    &kp Z      &kp X      &kp C       &kp V       &kp B    _BTOOTH  &none    &none    _COLEMAK &kp N    &kp M       _COMMA      &kp DOT    &kp FSLH      _RSFT
							       _LMET       _LALT       _NAVFUN  _NAVSPA  _ENT     _QWERTY  _NUMBSPA _NAVFUN  _LALT       _LMET
			>;
		};

		qwerty_layer {
// ------------------------------------------------------------------------------------------------------------------------------------------------
//  | ______ |  Q     |  W     |  E     |  R     |  T     |                                   |  Y     |  U     |  I     |  O     |   P    | Enter |
//  | ______ |  A     |  S     |  D     |  F     |  G     |                                   |  H     |  J     |  K     |  L     |   :    | ctrl  |
//  | ______ |  Z     |  X     |  C     |  V     |  B     | ______ |  ----  |  ----  | ______ |  N     |  M     |  ,     |  .     |   /    | shft  |
//                             | ______ | ______ | ______ | ______ | ______ | ______ | ______ | ______ | ______ | ______ |
// ------------------------------------------------------------------------------------------------------------------------------------------------
			bindings = <
	______   &kp Q    &kp W    &kp E    &kp R    &kp T                                        &kp Y    &kp U    &kp I    &kp O    &kp P     ______
	______   &kp A    &kp S    &kp D    &kp F    &kp G                                        &kp H    &kp J    &kp K    &kp L    &kp SEMI  ______
	______   &kp Z    &kp X    &kp C    &kp V    &kp B    ______   &none    &none    ______   &kp N    &kp M    _COMMA   &kp DOT  &kp FSLH  ______
							   ______   ______   ______   ______   ______   _DEFAULT ______   ______   ______   ______
			>;
		};

		colemak_layer {
// ------------------------------------------------------------------------------------------------------------------------------------------------
//  |  ESC   |  Q     |  W     |  F     |  P     |  G     |                                   |  J     |  L     |  U     |  Y     |   :   | Enter |
//  | TAB/CTL|  A     |  R     |  S     |  T     |  D     |                                   |  H     |  N     |  E     |  I     |   O   | ctrl  |
//  | SHIFT  |  Z     |  X     |  C     |  V     |  B     |  atl   |  ----  |  ----  |  alt   |  K     |  M     |  ,     |  .     |   /   | shft  |
//                             | nav    | meta   | alt    | space  | Enter  | qwermod|  num   | nav    | bt     |default |
// ------------------------------------------------------------------------------------------------------------------------------------------------
			bindings = <
	&kp ESC  &kp Q    &kp W    &kp F    &kp P    &kp G                                        &kp J    &kp L    &kp U    &kp Y    &kp SEMI _BSPC
	CTL_TAB  &kp A    &kp R    &kp S    &kp T    &kp D                                        &kp H    &kp N    &kp E    &kp I    &kp O    _RCTL
	_LSFT    &kp Z    &kp X    &kp C    &kp V    &kp B    _LALT    &none    &none    _RALT    &kp K    &kp M    _COMMA   &kp DOT  &kp FSLH _RSFT
	                           _NAVFUN  _LMET    _LALT    _SPAC    _ENT     _QWERTY  _NUMSYS  _NAVFUN  _BTOOTH  _DEFAULT
			>;
		};

		num_sym_layer {
			bindings = <
	______   &kp N1   &kp N2   &kp N3   &kp N4   &kp N5                                       &kp N6   &kp N7   &kp N8   &kp N9   &kp N0   &kp BSLH
	______   &kp EXCL &kp AT   &kp HASH &kp DLLR _PRCNT                                       _CARET   &kp AMPS &kp STAR &kp LPAR &kp RPAR ______  
	______   &kp LBRC &kp RBRC &kp LBKT &kp RBKT &kp DQT  ______   &none    &none    ______   &kp SQT  _UNDER   _MINUS   &kp PLUS _EQUAL   ______
							   ______   ______   ______   ______   ______   ______   ______   ______   ______   ______  
			>;
		};

		nav_fun_layer {
			bindings = <
	______   &kp ESC  _HOME    _UP      _END     _PGUP                                        &kp F1   &kp F2   &kp F3   &kp F4   &kp DEL  ______
	______   _CLAN    _LEFT    _DOWN    _RGHT    _PGDN                                        &kp F5   &kp F6   &kp F7   &kp F8   ______   ______
	______   &kp CAPS _TILDE   _GRAVE   _PIPE    &kp BSLH ______   &none    &none    ______   &kp F9   &kp F10  &kp F11  &kp F12  ______   ______
				               ______   ______   ______   _LALT    ______   ______   _LALT    ______   ______   ______
			>;
		};

		bt_layer {
			bindings = <
	______   ______   ______   ______   ______   ______                                       ______   ______   ______   ______   ______   ______
	______   ______   ______   ______   ______   ______                                       ______   ______   ______   ______   ______   ______
	______   _BT1     _BT2     _BTCLR   ______   ______   ______   &none    &none    ______   ______   ______   ______   ______   ______   ______
	                           ______   ______   _OUTBLE  _OUTUSB  _OUTTOG  ______   ______   ______   ______   ______
			>;
		};
	};
};
