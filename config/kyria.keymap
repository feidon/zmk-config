/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define default_layer 0
#define qwertymod_layer 1
#define colemak_layer 2
#define num_sym_layer 3
#define nav_fun_layer 4
#define bt_layer 5

/ {
	behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

	keymap {
		compatible = "zmk,keymap";

		default_layer {
// ------------------------------------------------------------------------------------------------------------------------------------------------
//  |  ESC   |  Q     |  W     |  E     |  R     |  T     |                                   |  Y     |  U     |  I     |  O     |   P    | Enter |
//  | TAB/CTL|  A     |  S     |  D     |  F     |  G     |                                   |  H     |  J     |  K     |  L     |   :    | ctrl  |
//  | SHIFT  |  Z     |  X     |  C     |  V     |  B     |  atl   |  ----  |  ----  |  alt   |  N     |  M     |  ,     |  .     |   /    | shft  |
//                             | nav    | meta   | alt    | space  | Enter  | qwermod|  num   | nav    | bt     |colemak |
// ------------------------------------------------------------------------------------------------------------------------------------------------
			bindings = <
	&kp ESC  &kp Q    &kp W    &kp E    &kp R    &kp T                                        &kp Y    &kp U    &kp I    &kp O    &kp P    &kp BSPC
	&mt LCTRL TAB  &kp A    &kp S    &kp D    &kp F    &kp G                                        &kp H    &kp J    &kp K    &kp L    &kp SEMI &kp RCTRL
	&kp LSHFT    &kp Z    &kp X    &kp C    &kp V    &kp B    &kp LALT    &none    &none    &kp RALT    &kp N    &kp M    &kp COMMA   &kp DOT  &kp FSLH &kp RSHFT
	                           &mo nav_fun_layer  &kp LMETA    &kp LALT    &kp SPACE    &kp ENTER     &to qwertymod_layer &mo num_sym_layer  &mo nav_fun_layer  &mo bt_layer  &to colemak_layer
			>;
		};

		qwertymod_layer {
// ------------------------------------------------------------------------------------------------------------------------------------------------
//  | &trans |  Q     |  W     |  E     |  R     |  T     |                                   |  Y     |  U     |  I     |  O     |   P    | Enter |
//  | &trans |  A     |  S     |  D     |  F     |  G     |                                   |  H     |  J     |  K     |  L     |   :    | ctrl  |
//  | &trans |  Z     |  X     |  C     |  V     |  B     | &trans |  ----  |  ----  | &trans |  N     |  M     |  ,     |  .     |   /    | shft  |
//                             | &trans | &trans | &trans | &trans | &trans | &trans | &trans | &trans | &trans | &trans |
// ------------------------------------------------------------------------------------------------------------------------------------------------
			bindings = <
	&trans   &kp Q      &kp W      &kp E       &kp R       &kp T                                        &kp Y    &kp U       &kp I       &kp O      &kp P         &trans
	&trans   &hm LALT A &hm LGUI S &hm LCTRL D &hm LSHFT F &kp G                                        &kp H    &hm LSHFT J &hm LCTRL K &hm LGUI L &hm LALT SEMI &trans
	&trans   &kp Z      &kp X      &kp C       &kp V       &kp B    &trans   &none    &none    &trans   &kp N    &kp M       &kp COMMA      &kp DOT    &kp FSLH      &trans
							       &trans      &trans      &trans   &trans   &trans   &trans   &trans   &trans   &trans      &trans
			>;
		};

		colemak_layer {
// ------------------------------------------------------------------------------------------------------------------------------------------------
//  |  ESC   |  Q     |  W     |  F     |  P     |  G     |                                   |  J     |  L     |  U     |  Y     |   :   | Enter |
//  | TAB/CTL|  A     |  R     |  S     |  T     |  D     |                                   |  H     |  N     |  E     |  I     |   O   | ctrl  |
//  | SHIFT  |  Z     |  X     |  C     |  V     |  B     |  atl   |  ----  |  ----  |  alt   |  K     |  M     |  ,     |  .     |   /   | shft  |
//                             | nav    | meta   | alt    | space  | Enter  | qwermod|  num   | nav    | bt     |default |
// ------------------------------------------------------------------------------------------------------------------------------------------------
			bindings = <
	&kp ESC  &kp Q    &kp W    &kp F    &kp P    &kp G                                        &kp J    &kp L    &kp U    &kp Y    &kp SEMI &kp BSPC
	&mt LCTRL TAB  &kp A    &kp R    &kp S    &kp T    &kp D                                        &kp H    &kp N    &kp E    &kp I    &kp O    &kp RCTRL
	&kp LSHFT    &kp Z    &kp X    &kp C    &kp V    &kp B    &kp LALT    &none    &none    &kp RALT    &kp K    &kp M    &kp COMMA   &kp DOT  &kp FSLH &kp RSHFT
	                           &mo nav_fun_layer  &kp LMETA    &kp LALT    &kp SPACE    &kp ENTER     &to qwertymod_layer &mo num_sym_layer  &mo nav_fun_layer  &mo bt_layer  &to default_layer
			>;
		};

		num_sym_layer {
			bindings = <
	&kp GRAVE   &kp N1   &kp N2   &kp N3   &kp N4   &kp N5                                       &kp N6   &kp N7   &kp N8   &kp N9   &kp N0   &kp BSLH
	&kp LMETA(SPACE)    &kp EXCL &kp AT   &kp HASH &kp DLLR &kp PRCNT                                       &kp CARET   &kp AMPS &kp STAR &kp LPAR &kp RPAR &trans  
	&trans   &kp LBRC &kp RBRC &kp LBKT &kp RBKT &trans   &none    &none    &trans   &kp DQT  &kp SQT  &kp UNDER   &kp MINUS   &kp PLUS &kp EQUAL
							   &trans   &trans   &trans   &trans   &trans   &trans   &trans   &trans   &trans   &trans  
			>;
		};

		nav_fun_layer {
			bindings = <
	&trans   &kp LA(UP)   &kp HOME    &kp UP      &kp END     &kp PG_UP                                        &trans   &kp F1   &kp F2   &kp F3   &kp F4   &kp DEL
	&trans   &kp LA(DOWN)   &kp LEFT    &kp DOWN    &kp RIGHT    &kp PG_DN                                        &trans   &kp F5   &kp F6   &kp F7   &kp F8   &trans
	&trans   &kp LS(LA(TAB))    &kp LA(TAB)    &kp LC(PG_UP)    &kp LC(PG_DN)    &trans   &trans   &none    &none    &trans   &trans   &kp F9   &kp F10  &kp F11  &kp F12  &trans
				               &trans   &trans   &trans   &trans   &trans   &trans   &trans   &trans   &trans   &trans
			>;
		};

		bt_layer {
			bindings = <
	&bt BT_CLR   &trans   &trans   &trans   &trans   &trans                                       &trans   &trans   &trans   &trans   &trans   &trans
	&trans   &trans   &trans   &trans   &trans   &trans                                       &trans   &trans   &trans   &trans   &trans   &trans
	&trans   &bt BT_SEL 0     &bt BT_SEL 1     &trans   &trans   &trans   &trans   &trans   &trans   &trans   &trans   &trans   &trans   &trans   &trans   &trans
	                           &trans   &trans   &out OUT_BLE  &out OUT_USB  &out OUT_TOG  &trans   &trans   &trans   &trans   &trans
			>;
		};
	};
};